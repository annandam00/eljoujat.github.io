<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rasmus Andersson</title>
  <link href="http://eljoujat.github.io/atom.xml" rel="self"/>
  <link href="http://eljoujat.github.io/"/>
  <updated>2015-05-09T13:45:06+01:00</updated>
  <id>http://eljoujat.github.io/</id>
  <author>
    <name>Rasmus Andersson</name>
    <email>rasmus@notion.se</email>
  </author>
  
  <entry>
    <title>Writing Impex with Style !</title>
    <link href="http://eljoujat.github.io/2015/04/24/impex-editor.html"/>
    <updated>2015-04-24T00:00:00+01:00</updated>
    <id>http://eljoujat.github.io/2015/04/24/impex-editor</id>
    <content type="html">&lt;blockquote&gt;&lt;p&gt;“TODO: Citation here.” .
&lt;a href=&quot;http://www.mayaangelou.com/&quot;&gt;Maya Angelou&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;The idea behind the current lab.&lt;/h2&gt;

&lt;p&gt;Impex is a &lt;a href=&quot;http://hybris.com&quot;&gt;hybris&lt;/a&gt; specific language in top of SQL to import/export data the database.&lt;/p&gt;

&lt;p&gt;The lack of tools for working with Impex, make this tasks a laborious one. In fact some available tools are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web console offered by hybris:

&lt;ul&gt;
&lt;li&gt;Pros: Syntax highlighting, validation, execution.&lt;/li&gt;
&lt;li&gt;Cons : requires a running instance of hybris, going out from eclipse, risking to loose all you work if the browser crashes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Excel or similar tools that could read and format CSV file:

&lt;ul&gt;
&lt;li&gt;Pros: Formatting that offers higher readability&lt;/li&gt;
&lt;li&gt;Cons: no syntax highlighting, no validation and execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Eclipse or similar IDE:

&lt;ul&gt;
&lt;li&gt;Pros: you stay focus on your IDE.&lt;/li&gt;
&lt;li&gt;Cons: no formatting, no syntax highlighting, no validation and execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The most used option is to use eclipse! Even if it&amp;rsquo;s the poorest option, but developer tend to choose it to stay more focus.&lt;/p&gt;

&lt;h2&gt;Eclipse Plugin :&lt;/h2&gt;

&lt;p&gt;To boost my productivity and to be more focus,I decided to develop an Impex eclipse plugin.&lt;/p&gt;

&lt;p&gt;The plugin should bring the hybris web console functionalities to eclipse.
The challenge was that all that I know about eclipse plugin development are some basic notions.&lt;/p&gt;

&lt;h3&gt;Learn by example:&lt;/h3&gt;

&lt;p&gt;I believe the best way to learn new things is to start with some theory, then jump to a practical example where the real wisdom is gained.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A good theorical Article is &lt;a href=&quot;http://www.eclipsepluginsite.com/&quot;&gt;Introduction To Eclipse Plugin Development&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A good practical tutorial i found interesting is :  &lt;a href=&quot;http://www.vogella.com/tutorials/EclipsePlugIn/article.html&quot;&gt;Extending the Eclipse IDE - Plug-in development - Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I took as example the sample plugin project given by eclipse to create a xml editor .&lt;/p&gt;

&lt;h3&gt;Components of the plugin :&lt;/h3&gt;

&lt;h4&gt;Syntax highlighting:&lt;/h4&gt;

&lt;p&gt;The Syntax highlighting feature uses the rule based scanner class ;  the scanner toos a givent number of rule, it cosume the impex file and evalute each token, if the token match a rule , the scanner exit with the correspondant properties.&lt;/p&gt;

&lt;p&gt;The ruleset are based on the Hybris &lt;a href=&quot;https://wiki.hybris.com/display/release5/ImpEx+Syntax&quot;&gt;Impex syntax documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before :
&lt;img src=&quot;/images/impex/avant.png&quot; alt=&quot;Before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/impex/after.png&quot; alt=&quot;After&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Preferences Of the plugins :&lt;/h3&gt;

&lt;p&gt;I also used the Preferences API to allow customisation, to give the more friendly user experience.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s possible to customize the feel and look of the Impex file:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/impex/perferences_1.png&quot; alt=&quot;Preference Snapshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And you can configure the connection with hybris, to execute and validate the impex with any running instance of hybris !&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/impex/perferences_2.png&quot; alt=&quot;Preference Snapshot&quot; /&gt;&lt;/p&gt;

&lt;h4&gt;Detecting hyrbis Item and attributes :&lt;/h4&gt;

&lt;p&gt;The first time eclipse run, the plugin connect to a the already configured running hybris instance (by default the localhost),call the Rest Webservice &lt;code&gt;allItems&lt;/code&gt; , and &lt;code&gt;allAttributes&lt;/code&gt; (exposed by hybris) and store the information to avoid call the web service again.&lt;/p&gt;

&lt;p&gt;To detect newly added Items or attributes, I Implementer an action to refresh the already stored data definition.&lt;/p&gt;

&lt;h4&gt;A challenge and a new techniques acquired :&lt;/h4&gt;

&lt;p&gt;The web services exposed by hybris require a registered hybris account and it&amp;rsquo;s secured against &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;Cross-site request forgery&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To make a successful call the request should pass a crsf token, the token is associated with the connected account. the challenge was that token is stored on the HTML code of a response, and I had to use the &lt;a href=&quot;http://jsoup.org/&quot;&gt;jsoup&lt;/a&gt; library to retrieve the token.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make a first to login, the call return with a JSESSIONID, I store the JSESSIONID for a further call.&lt;/li&gt;
&lt;li&gt;Use jsoup with the stored JSESSIONID, and get the crsf token from the html.&lt;/li&gt;
&lt;li&gt;Make a Rest Call to retrieve the Items and attributes definition.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;The coolest feature : Autocompletion .&lt;/h3&gt;

&lt;p&gt;The auto-completion is the moste liked what the most user look for in any text editor, since i have stored the data deffinition, this feature was easy to implement as well :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/impex/autosuggest.png&quot; alt=&quot;Preference Snapshot&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Install the plugin :&lt;/h2&gt;

&lt;p&gt;To install the plugin just copy &lt;a href=&quot;/labs/org.ucf.eclipseplugins.impexeditor_1.5.4.201505091329.jar&quot;&gt;eclipseplugins&lt;/a&gt; to the dropins folder under eclipse directory , and restart eclipse , and enjoy :)&lt;/p&gt;

&lt;h2&gt;What next:&lt;/h2&gt;

&lt;p&gt;Other features i&amp;rsquo;m working on are :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Validate the impex with error markers.&lt;/li&gt;
&lt;li&gt;Execute the impex .&lt;/li&gt;
&lt;li&gt;Hyperlink features to easily locate where an Item is already valued from the same impex .&lt;/li&gt;
&lt;li&gt;Find usage Features, find all usage for the selected definied and selected item .&lt;/li&gt;
&lt;li&gt;Formatting .&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Code Source Repos:&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eljoujat/eclipseimpexeditor&quot;&gt;The code source repo is available here &lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;“I believe that there is always an other way to do it, and i hope that you let me know .”&lt;/p&gt;&lt;/blockquote&gt;
</content>
    <author>
      <name>Rasmus Andersson</name>
      <uri>http://eljoujat.github.io/about/</uri>
    </author>
  </entry>
  
  <entry>
    <title>How i wrote my first post ?</title>
    <link href="http://eljoujat.github.io/2015/03/01/how-i-wrote-my-first-post.html"/>
    <updated>2015-03-01T00:00:00+00:00</updated>
    <id>http://eljoujat.github.io/2015/03/01/how-i-wrote-my-first-post</id>
    <content type="html">&lt;blockquote&gt;&lt;p&gt;“There is no greater agony than bearing an untold story inside you.” .
&lt;a href=&quot;http://www.mayaangelou.com/&quot;&gt;Maya Angelou&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m programmer, i&amp;rsquo;ve always believed that every good progammer &lt;a href=&quot;http://architects.dzone.com/articles/why-programmers-should-have&quot;&gt;should have a blog&lt;/a&gt;. This week i made the decision to write my first post, before writing the first post i had to answer some questions :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What shoud i blogg about ?&lt;/li&gt;
&lt;li&gt;which blogging platform to use ?&lt;/li&gt;
&lt;li&gt;then i can start blogging&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Blogging about &amp;hellip;?&lt;/h2&gt;

&lt;p&gt;For me This was the most difficult question to answer, as i thoought for a long time that i have no good things share &amp;hellip;&lt;/p&gt;

&lt;p&gt; was wrong all the time, and what&amp;rsquo;s obvious to me could be amazing for others  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/xcmI5SSQLmE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;So blogging about &amp;hellip;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blogger_joke.jpg&quot; alt=&quot;Blog about ...&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Eevery programming experiments i do, every new software notion i learn or i wish to learn. On my daily job tasks, i face problems that take me time to solve, so i will write posts describing how i solve them. I will write posts about every idea that found its path to my mind.&lt;/p&gt;

&lt;p&gt;Bref, This blog will be my laboratory.&lt;/p&gt;

&lt;h2&gt;Ghost, Medium, Blogger,&amp;hellip; which blogging platform to use ?&lt;/h2&gt;

&lt;p&gt;I start my day with reading what&amp;rsquo;s new on &lt;a href=&quot;https://news.ycombinator.com/news&quot;&gt;Hacker News&lt;/a&gt;, most of them are posts on blog hosted on platforms , like &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://svbtle.com/&quot;&gt;svbtle&lt;/a&gt;, &lt;a href=&quot;https://www.blogger.com&quot;&gt;Blogger&lt;/a&gt;, &lt;a href=&quot;https://ghost.org/&quot;&gt;ghost&lt;/a&gt;. each one of theme has pros and cons that i will not details here .&lt;/p&gt;

&lt;p&gt;I made a short list of what features i need .&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Free hosting ☺  (a personal domain is not) .&lt;/li&gt;
&lt;li&gt;Progammer freindly :allow to write code with features like , formatting, syntax highliting&amp;hellip;&lt;/li&gt;
&lt;li&gt;Simple and minimalist&lt;/li&gt;
&lt;li&gt;Easy and powerful customization&lt;/li&gt;
&lt;li&gt;Allow to write fast and publishing faster.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; with &lt;a href=&quot;http://pages.github.com/&quot;&gt;github pages&lt;/a&gt; as free hosting solution was what suited for me the best .&lt;/p&gt;

&lt;h2&gt;Start Blogging&lt;/h2&gt;

&lt;h3&gt;Create the blog&lt;/h3&gt;

&lt;p&gt;Github give a simple and easye to follow step by step &lt;a href=&quot;https://pages.github.com/&quot;&gt;guide&lt;/a&gt; to create your blogg, all what one should do is to follow the guide.&lt;/p&gt;

&lt;p&gt;i cloned the site into my local post so i can preview any change and validate before publishing to github .&lt;/p&gt;

&lt;h3&gt;Install Jekyll&lt;/h3&gt;

&lt;p&gt;To Install Jekyll is a simple task, unless you are a windows user like me .&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download and install Ruby from &lt;a href=&quot;http://rubyinstaller.org/downloads#download-links&quot;&gt;Ruby Installer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download and install Ruby Devkit  from &lt;a href=&quot;http://rubyinstaller.org/downloads#ownload-links&quot;&gt;Ruby Dev Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract the Dev kit zip to a local directory, and add it to the windows PATH variable.&lt;/li&gt;
&lt;li&gt;Open up a command prompt and type :&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Bundle&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; If you have this error&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;While&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UndefinedConversionError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CP850&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conversion&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UTF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CP850&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; don&amp;rsquo;t panic , just type&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;chcp&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1252&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; and then re execute the previous command.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Execute&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; to verify if all went well .&lt;/p&gt;

&lt;h3&gt;Structure of the Blog&lt;/h3&gt;

&lt;p&gt;I took these list of &lt;a href=&quot;http://jekyllrb.com/docs/sites/&quot;&gt;Sites using Jekyll&lt;/a&gt; , as a starting  point to understand how i should structure my blog and some best practices to apply.&lt;/p&gt;

&lt;p&gt;I got especialy inspired  by the blog of &lt;a href=&quot;http://rsms.me/&quot;&gt;Rasmus Andersson&lt;/a&gt;(&lt;a href=&quot;https://github.com/rsms/rsms.github.com&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;

&lt;h4&gt;Layouts :&lt;/h4&gt;

&lt;p&gt;Layouts allow you to define a structure and used as i want with just a declaration .&lt;/p&gt;

&lt;p&gt;I defined two Layouts :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the default layout for the page (header , footer ,side bars, comments section) .&lt;/li&gt;
&lt;li&gt;the post layout for the post ,thta include the default layout.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; &lt;a href=&quot;https://github.com/eljoujat/eljoujat.github.io/tree/master/_layouts&quot;&gt;code source&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Includes :&lt;/h3&gt;

&lt;p&gt;I used these feature , to include google analytics code and &lt;a href=&quot;https://disqus.com/&quot;&gt;disqus comments engine &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eljoujat/eljoujat.github.io/tree/master/_includes&quot;&gt;Code source&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Write the first post&lt;/h3&gt;

&lt;p&gt;Once the structure of the blog is well defined, all what&amp;rsquo;s left is to print my ideas on a text format that Jekyll and github can render to obtain what you are seeing and reading right now .&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;&lt;p&gt;“I believe that there is always an other way to do it, and i hope that you let me know .”&lt;/p&gt;&lt;/blockquote&gt;
</content>
    <author>
      <name>Rasmus Andersson</name>
      <uri>http://eljoujat.github.io/about/</uri>
    </author>
  </entry>
  
</feed>